{"version":3,"sources":["logo.svg","Components/Home/Home.js","Components/Notes/Notes.js","Components/Notes/NoteCreate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","React","Component","Notes","state","notes","className","this","renderTableData","map","index","id","title","text","created","updated","key","onClick","onDelete","axios","get","then","response","setState","data","thisObj","delete","splice","console","log","alert","NoteCreate","props","handleTitleChange","bind","handleTextChange","handleSubmit","onSubmit","colSpan","type","value","onChange","event","preventDefault","post","error","target","App","w3_open","main","marginLeft","mySidebar","width","display","openNav","w3_close","style","exact","activeClassName","to","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.645bfc80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nclass Home extends React.Component {\n    render () {\n        return (\n            <div>\n                Welcome\n            </div>\n        );\n    }\n    \n}\n\nexport default Home;","import React from 'react';\nimport axios from 'axios';\n\nclass Notes extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            notes: []\n        }\n    }\n    \n    render () {\n        return (\n            <div>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Text</th>\n                            <th>Created at</th>\n                            <th>Updated at</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderTableData()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    renderTableData() {\n        return this.state.notes.map((notes, index) => {\n           const { id, title, text, created, updated } = notes //destructuring\n           return (\n                <tr key={id}>\n                    <td>{title}</td>\n                    <td>{text}</td>\n                    <td>{created}</td>\n                    <td>{updated}</td>\n                    <td><button className=\"btnDelete\" onClick={() => this.onDelete(id, index)}>Delete</button></td>\n                </tr>\n           )\n        })\n    }\n\n    componentDidMount() {\n        // Get all my notes\n        axios.get('http://localhost:8080/notes')\n            .then(response => {\n                this.setState({ notes: response.data })\n            })\n    }\n\n    onDelete (id, index) {\n        const thisObj = this;\n        axios.delete('http://localhost:8080/notes/' + id)\n        .then(function (response) {\n            let notes = thisObj.state.notes;\n            notes.splice(index, 1);\n            console.log(notes);\n            thisObj.setState({notes});\n            thisObj.renderTableData();\n            alert('Note: ' + id + ' deleted');\n        })\n    }\n    \n}\n\nexport default Notes;","import React from 'react';\nimport axios from 'axios';\n\nclass NoteCreate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          title: '',\n          text: ''\n        };\n    \n        this.handleTitleChange = this.handleTitleChange.bind(this);\n        this.handleTextChange = this.handleTextChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    render () {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th colSpan=\"2\" className=\"center\">Add note</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <label>\n                                        Title:\n                                    </label>\n                                </td>\n                                <td>\n                                    <input type=\"text\" value={this.state.title} onChange={this.handleTitleChange} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <label>\n                                        Text:\n                                    </label>\n                                </td>\n                                <td>\n                                    <textarea value={this.state.text} onChange={this.handleTextChange}></textarea>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <input className=\"btnSubmit\" type=\"submit\" value=\"Send\" />\n                </form>\n            </div>\n        );\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        axios.post('http://localhost:8080/notes', { \n            title: this.state.title,\n            text: this.state.text\n        })\n            .then((response) => {\n                this.setState({\n                    title: '',\n                    text: ''\n                });\n                alert('The new note added');\n            }, (error) => {\n                console.log(error);\n                alert('Please fill in the form fields');\n            });\n    }\n\n    handleTitleChange(event) {\n        this.setState({title: event.target.value});\n    }\n\n    handleTextChange(event) {\n        this.setState({text: event.target.value});\n    }\n    \n}\n\nexport default NoteCreate;","'use strict';\nimport React from 'react';\nimport logo from './logo.svg';\n\nimport Home from './Components/Home/Home';\nimport Notes from './Components/Notes/Notes';\nimport NoteCreate from './Components/Notes/NoteCreate';\n\nimport {\n    Route,\n    Switch,\n    NavLink\n  } from \"react-router-dom\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            main: {\n                marginLeft: '100px'\n            },\n            mySidebar: {\n                width: '100px',\n                display: 'block'\n            },\n            openNav: {\n                display: 'none'\n            }\n        }\n    }\n    render () {\n        return (\n            <div className=\"App\">   \n                <div id=\"mySidebar\" className=\"w3-sidebar w3-light-grey w3-card-4 w3-animate-left\" \n                    style={{width: this.state.mySidebar.width, display:this.state.mySidebar.display}}>\n                    <div className=\"w3-bar w3-dark-grey\">\n                        <span className=\"w3-bar-item w3-padding-16\">Nav</span>\n                        <button onClick={this.w3_close} className=\"w3-bar-item w3-button w3-right w3-padding-16\"\n                            title=\"close Sidebar\">×</button>\n                    </div>\n                    <div className=\"w3-bar-block\">\n                        <NavLink exact={true} className=\"w3-bar-item w3-button\" activeClassName=\"w3-green\" to='/'>Home</NavLink>\n                        <NavLink exact={true} className=\"w3-bar-item w3-button\" activeClassName=\"w3-green\" to='/notes'>Notes</NavLink>\n                        <NavLink exact={true} className=\"w3-bar-item w3-button\" activeClassName=\"w3-green\" to='/note/create'>Add note</NavLink>\n                    </div>\n                </div>\n                <div id=\"main\" style={{marginLeft: this.state.main.marginLeft}}>\n                    <div className=\"w3-container w3-display-container\">\n                        <span title=\"open Sidebar\" id=\"openNav\"\n                            className=\"w3-button w3-transparent w3-display-topleft w3-xlarge\" \n                            style={{display: this.state.openNav.display}}\n                            onClick={this.w3_open}>☰</span>\n                        <h3 className=\"h3\">Slim and React test task</h3>\n                        <div className=\"container\">\n                        <Switch>\n                            <Route path='/note/create' component={NoteCreate} />\n                            <Route path='/notes' component={Notes} />\n                            <Route path='/' component={Home} />\n                        </Switch>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    w3_open = () => {\n        this.setState({\n            main: {\n                marginLeft: '100px'\n            },\n            mySidebar: {\n                width: '100px',\n                display: 'block'\n            },\n            openNav: {\n                display: 'none'\n            }\n        });\n    }\n\n    w3_close = () => {\n        this.setState({\n            main: {\n                marginLeft: '0'\n            },\n            mySidebar: {\n                // width: '100px',\n                display: 'none'\n            },\n            openNav: {\n                display: 'inline-block'\n            }\n        });\n    }    \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","'use strict';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\"\n//import {createBrowserHistory} from 'history'\n\nimport './index.scss';\n\n//const history = createBrowserHistory();\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}